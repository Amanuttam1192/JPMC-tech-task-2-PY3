From eaf04b6462197406bc8fa39e50898a2fcfd7149c Mon Sep 17 00:00:00 2001
From: Amanuttam1192 <201b035@juetguna.in>
Date: Tue, 26 Jul 2022 12:43:07 +0530
Subject: [PATCH] Create Patch File

---
 src/App.tsx   | 21 ++++++++++++++++-----
 src/Graph.tsx | 14 ++++++++++++--
 2 files changed, 28 insertions(+), 7 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..161405a 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,20 +31,28 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if(this.state.showGraph){
     return (<Graph data={this.state.data}/>)
   }
+  }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let x = 0;
+    const interval = setInterval(() => {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
-  }
 
+      this.setState({ data:serverResponds,
+      showGraph: true,
+       });
+    });
+    if (x>1000){
+      clearInterval(interval);
+    }
+  }, 100);
+}
   /**
    * Render the App react component
    */
@@ -54,6 +64,7 @@ class App extends Component<{}, IState> {
         </header>
         <div className="App-content">
           <button className="btn btn-primary Stream-button"
+          <div className="Graph">
             // when button is click, our react app tries to request
             // new data from the server.
             // As part of your task, update the getDataFromServer() function
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..6b2fe8c 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem  = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,16 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.SetAttribute('view','y_line');
+      elem.SetAttribute('column-pivots','["stock"]');
+      elem.SetAttribute('row-pivots','["timestamp"]');
+      elem.SetAttribute('column','["top_ask_price"]');
+      elem.SetAttribute('aggregates',
+        {"stock":"distinct count",
+        "top_ask_price":"avg",
+        "top_bid_price":"avg",
+        "timestamp":"distinct count"});
+
     }
   }
 
-- 
2.36.1.windows.1

